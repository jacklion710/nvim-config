local dap = require("dap")
local dapui = require("dapui")

-- Set up debugpy for Python using the conda environment
require("dap-python").setup(vim.g.python3_host_prog)

-- Configure DAP UI
dapui.setup()

-- Automatically open and close the DAP UI
dap.listeners.after.event_initialized["dapui_config"] = function()
	dapui.open()
end
dap.listeners.before.event_terminated["dapui_config"] = function()
	dapui.close()
end
dap.listeners.before.event_exited["dapui_config"] = function()
	dapui.close()
end

-- Keymaps
vim.keymap.set("n", "<leader>%", function()
	require("dap").continue()
end)
vim.keymap.set("n", "<leader>^", function()
	require("dap").step_over()
end)
vim.keymap.set("n", "<leader>&", function()
	require("dap").step_into()
end)
vim.keymap.set("n", "<leader>:*", function()
	require("dap").step_out()
end)
vim.keymap.set("n", "<Leader>dl", function()
	require("dap").run_last()
end)
vim.keymap.set("n", "<leader>dbb", function()
	require("dap").toggle_breakpoint()
end)
vim.keymap.set("n", "<leader>dbB", function()
	require("dap").set_breakpoint()
end)
vim.keymap.set("n", "<leader>dbl", function()
	require("dap").set_breakpoint(nil, nil, vim.fn.input("Log point message: "))
end)
vim.keymap.set("n", "<leader>dbr", function()
	require("dap").repl.open()
end)
vim.keymap.set({ "n", "v" }, "<Leader>dh", function()
	require("dap.ui.widgets").hover()
end)
vim.keymap.set({ "n", "v" }, "<Leader>dp", function()
	require("dap.ui.widgets").preview()
end)
vim.keymap.set("n", "<Leader>df", function()
	local widgets = require("dap.ui.widgets")
	widgets.centered_float(widgets.frames)
end)
vim.keymap.set("n", "<Leader>ds", function()
	local widgets = require("dap.ui.widgets")
	widgets.centered_float(widgets.scopes)
end)
